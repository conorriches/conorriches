{"version":3,"file":"component---src-pages-blog-js-873c7594eaf65356167d.js","mappings":"gNAkBA,EAdiB,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAH,OACf,uBAAKC,UAAU,YACb,wBAAMA,UAAU,yBACd,gBAAC,KAAD,CAAMA,UAAU,iBAAiBC,GAAIF,EAAKG,OAAOC,MAC/C,uBAAKH,UAAU,mBAAmBD,EAAKK,YAAYC,OACnD,uBAAKL,UAAU,qBACiB,UAA7BD,EAAKK,YAAYE,QACdP,EAAKK,YAAYE,SAAWP,EAAKO,QACjC,QCuDd,EA5DMC,SAAAA,GACJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CACXC,MAAO,IAGT,EAAKC,aAAe,EAAKA,aAAaC,KCd3B,SAAgCC,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAG3B,OAAOD,EDSe,KANH,GADfN,EAAAA,EAAAA,GAAAA,EAAAA,GAQH,kBAkDA,OAlDA,EAEDI,aAAA,SAAaI,GACXC,KAAKC,SAAS,CAAEP,MAAOK,EAAMG,OAAOC,SACrC,EAEDC,OAAA,SAAOC,GACL,OAAIL,KAAKP,MAAMC,QAEXW,EAAKC,KAAKlB,YAAYC,MACnBkB,cACAC,QAAQR,KAAKP,MAAMC,MAAMa,gBAAkB,GAC9CF,EAAKC,KAAKlB,YAAYE,QACnBiB,cACAC,QAAQR,KAAKP,MAAMC,MAAMa,gBAAkB,IAInD,EAEDE,OAAA,WAAU,IAAD,OAODC,EAFFV,KAAKR,MAHPmB,KACEC,kBAAqBC,MAKtBT,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKlB,YAAY0B,QACvCV,QAAO,SAAAC,GAAI,OAAI,EAAKD,OAAOC,MAC3BU,KAAI,SAAAV,GACH,OAAO,gBAAC,EAAD,CAAUW,IAAKX,EAAKC,KAAKW,GAAIlC,KAAMsB,EAAKC,UAEnD,OACE,gBAAC,IAAD,CAAQY,OAAO,cACb,uBAAKlC,UAAU,QACb,uBAAKA,UAAU,uBACb,yBACEA,UAAU,eACVmC,KAAK,OACLC,YAAY,UACZjB,MAAOH,KAAKP,MAAMC,MAClB2B,SAAUrB,KAAKL,gBAInB,uBAAKX,UAAU,eAAe0B,MAIrC,EA1DGnB,CAAiB+B,EAAAA","sources":["webpack://gatsby-universal/./src/components/post-link/post-link.js","webpack://gatsby-universal/./src/pages/blog.js","webpack://gatsby-universal/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport './post-link.scss';\r\n\r\nconst PostLink = ({ post }) => (\r\n  <div className=\"PostLink\">\r\n    <span className=\"PostLink__LinkWrapper\">\r\n      <Link className=\"PostLink__Link\" to={post.fields.slug}>\r\n        <div className=\"PostLink__Title\">{post.frontmatter.title}</div>\r\n        <div className=\"PostLink__Excerpt\">\r\n          {post.frontmatter.excerpt !== 'false'\r\n            ? post.frontmatter.excerpt || post.excerpt\r\n            : ''}\r\n        </div>\r\n      </Link>\r\n    </span>\r\n  </div>\r\n);\r\nexport default PostLink;\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Layout from 'components/layout';\r\nimport PostLink from '../components/post-link';\r\n\r\nimport './blog.scss';\r\n\r\nclass BlogPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      query: '',\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ query: event.target.value });\r\n  }\r\n\r\n  filter(edge) {\r\n    if (this.state.query) {\r\n      return (\r\n        edge.node.frontmatter.title\r\n          .toLowerCase()\r\n          .indexOf(this.state.query.toLowerCase()) >= 0 ||\r\n        edge.node.frontmatter.excerpt\r\n          .toLowerCase()\r\n          .indexOf(this.state.query.toLowerCase()) >= 0\r\n      );\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      data: {\r\n        allMarkdownRemark: { edges },\r\n      },\r\n    } = this.props;\r\n\r\n    const Posts = edges\r\n      .filter(edge => !!edge.node.frontmatter.date)\r\n      .filter(edge => this.filter(edge))\r\n      .map(edge => {\r\n        return <PostLink key={edge.node.id} post={edge.node} />;\r\n      });\r\n    return (\r\n      <Layout colour=\"millennial\">\r\n        <div className=\"Blog\">\r\n          <div className=\"Blog__SearchWrapper\">\r\n            <input\r\n              className=\"Blog__Search\"\r\n              type=\"text\"\r\n              placeholder=\"Filter \"\r\n              value={this.state.query}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"Blog__Posts\">{Posts}</div>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\nexport default BlogPage;\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\r\n      edges {\r\n        node {\r\n          id\r\n          excerpt(pruneLength: 250)\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            excerpt\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}"],"names":["post","className","to","fields","slug","frontmatter","title","excerpt","BlogPage","props","state","query","handleChange","bind","self","ReferenceError","event","this","setState","target","value","filter","edge","node","toLowerCase","indexOf","render","Posts","data","allMarkdownRemark","edges","date","map","key","id","colour","type","placeholder","onChange","React"],"sourceRoot":""}