{"version":3,"file":"component---src-pages-blog-js-6360b634c635dce18a8c.js","mappings":"gNAyBA,EAnBiB,SAAH,GAAkB,IAAD,IAAXA,EAAI,EAAJA,KAClB,OACE,uBAAKC,UAAU,YACb,gBAAC,KAAI,CAACA,UAAU,iBAAiBC,GAAIF,EAAKG,OAAOC,MAC/C,uBAAKH,UAAU,mBACb,uBAAKI,IAAmC,QAAhC,EAAEL,EAAKM,YAAYC,qBAAa,OAAiB,QAAjB,EAA9B,EAAgCC,uBAAe,WAAjB,EAA9B,EAAiDC,MAAMC,QAASC,IAAI,MAEhF,uBAAKV,UAAU,qBACb,uBAAKA,UAAU,mBAAmBD,EAAKM,YAAYM,OACnD,uBAAKX,UAAU,qBACiB,UAA7BD,EAAKM,YAAYO,QACdb,EAAKM,YAAYO,SAAWb,EAAKa,QACjC,MAMhB,EC2CA,EA5Dc,YACZ,WAAYC,GAAQ,IAAD,EAMgC,OALjD,cAAMA,IAAM,MACPC,MAAQ,CACXC,MAAO,IAGT,EAAKC,aAAe,EAAKA,aAAaC,KCd3B,SAAgCC,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAE3B,OAAOD,CACT,CDS+C,KAAM,CACnD,EARY,YAQX,kBAkDA,OAlDA,EAEDF,aAAA,SAAaI,GACXC,KAAKC,SAAS,CAAEP,MAAOK,EAAMG,OAAOC,OACtC,EAAC,EAEDC,OAAA,SAAOC,GACL,OAAIL,KAAKP,MAAMC,QAEXW,EAAKC,KAAKtB,YAAYM,MACnBiB,cACAC,QAAQR,KAAKP,MAAMC,MAAMa,gBAAkB,GAC9CF,EAAKC,KAAKtB,YAAYO,QACnBgB,cACAC,QAAQR,KAAKP,MAAMC,MAAMa,gBAAkB,EAIpD,EAAC,EAEDE,OAAA,WAAU,IAAD,OAODC,EAFFV,KAAKR,MAHPmB,KACEC,kBAAqBC,MAKtBT,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKtB,YAAY8B,IAAI,IAC3CV,QAAO,SAAAC,GAAI,OAAI,EAAKD,OAAOC,EAAK,IAChCU,KAAI,SAAAV,GACH,OAAO,gBAAC,EAAQ,CAACW,IAAKX,EAAKC,KAAKW,GAAIvC,KAAM2B,EAAKC,MACjD,IACF,OACE,gBAAC,IAAM,CAACY,OAAO,cACb,uBAAKvC,UAAU,QACb,uBAAKA,UAAU,uBACb,yBACEA,UAAU,eACVwC,KAAK,OACLC,YAAY,UACZjB,MAAOH,KAAKP,MAAMC,MAClB2B,SAAUrB,KAAKL,gBAInB,uBAAKhB,UAAU,eAAe+B,IAItC,EAAC,EA1DW,CAASY,EAAAA,U","sources":["webpack://gatsby-universal/./src/components/post-link/post-link.js","webpack://gatsby-universal/./src/pages/blog.js","webpack://gatsby-universal/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\n\nimport './post-link.scss';\n\nconst PostLink = ({ post }) => {\n  return (\n    <div className=\"PostLink\">\n      <Link className=\"PostLink__Link\" to={post.fields.slug}>\n        <div className=\"PostLink__Image\">\n          <img src={post.frontmatter.featuredImage?.childImageSharp?.fixed.srcWebp} alt=\"\"/>\n        </div>\n        <div className=\"PostLink__Details\">\n          <div className=\"PostLink__Title\">{post.frontmatter.title}</div>\n          <div className=\"PostLink__Excerpt\">\n            {post.frontmatter.excerpt !== 'false'\n              ? post.frontmatter.excerpt || post.excerpt\n              : ''}\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\nexport default PostLink;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from 'components/layout';\nimport PostLink from '../components/post-link';\n\nimport './blog.scss';\n\nclass BlogPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ query: event.target.value });\n  }\n\n  filter(edge) {\n    if (this.state.query) {\n      return (\n        edge.node.frontmatter.title\n          .toLowerCase()\n          .indexOf(this.state.query.toLowerCase()) >= 0 ||\n        edge.node.frontmatter.excerpt\n          .toLowerCase()\n          .indexOf(this.state.query.toLowerCase()) >= 0\n      );\n    }\n    return true;\n  }\n\n  render() {\n    const {\n      data: {\n        allMarkdownRemark: { edges },\n      },\n    } = this.props;\n\n    const Posts = edges\n      .filter(edge => !!edge.node.frontmatter.date)\n      .filter(edge => this.filter(edge))\n      .map(edge => {\n        return <PostLink key={edge.node.id} post={edge.node} />;\n      });\n    return (\n      <Layout colour=\"millennial\">\n        <div className=\"Blog\">\n          <div className=\"Blog__SearchWrapper\">\n            <input\n              className=\"Blog__Search\"\n              type=\"text\"\n              placeholder=\"Filter \"\n              value={this.state.query}\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <div className=\"Blog__Posts\">{Posts}</div>\n        </div>\n      </Layout>\n    );\n  }\n}\nexport default BlogPage;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            excerpt\n            featuredImage {\n              childImageSharp {\n                fixed(width: 200, height: 200) {\n                  srcWebp\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}"],"names":["post","className","to","fields","slug","src","frontmatter","featuredImage","childImageSharp","fixed","srcWebp","alt","title","excerpt","props","state","query","handleChange","bind","self","ReferenceError","event","this","setState","target","value","filter","edge","node","toLowerCase","indexOf","render","Posts","data","allMarkdownRemark","edges","date","map","key","id","colour","type","placeholder","onChange","React"],"sourceRoot":""}